openapi: 3.0.1
info:
  title: KeyBlogs API
  description: 'API for a blog web app built with Django REST Framework and is
                available [here](https://keyblogsapi.herokuapp.com/)'
  contact:
    email: asnqln@gmail.com
  version: 2.0.5
servers:
- url: https://keyblogsapi.herokuapp.com/api
- url: http://keyblogsapi.herokuapp.com/api
tags:
- name: Writer
  description: CRUD operations on Writers(User)
- name: Blog
  description: CRUD operations on Blogs
paths:
  /writer/login:
    post:
      tags:
        - Writer
      summary: Login an existing user
      operationId: signin
      requestBody:
        description: Username and Password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Writer'
        required: true
      responses:
        203:
          description: User not found / Invalid password
          content: {}
        200:
          description: Success
          content: {}
      x-codegen-request-body-name: body
  /writer/logout/{pk}:
    get:
      tags:
        - Writer
      summary: Logout a user
      description: Logout a user
      operationId: signout
      parameters:
        - name: pk
          in: path
          description: Primary key of user, to be logged out
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successfull Logout
          content: {}
  /writer/create:
    post:
      tags:
        - Writer
      summary: Creating a new user
      operationId: signup
      requestBody:
        description: Name, Email and Password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Writer'
        required: true
      responses:
        203:
          description: Invalid field values
          content: {}
        201:
          description: Success
          content: {}
      x-codegen-request-body-name: body
  # /writer/activate/{uidb64}/{token}:
  # /writer/setup/{pk}:
  /writer/manage/{username}:
    get:
      tags:
        - Writer
      summary: Get user data
      description: Get user data
      operationId: acc_manage_read
      parameters:
        - name: username
          in: path
          description: Username of user, to be read
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: User found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Writer'
        404:
          description: User not found
          content: {}
    put:
      tags:
      - Writer
      summary: Update an existing user
      operationId: acc_manage_update
      parameters:
        - name: username
          in: path
          description: Username of user, to be read
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: Updated data of user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Writer'
        required: true
      responses:
        200:
          description: Field values are valid, User updated
          content: {}
        203:
          description: Invalid field values
          content: {}
      x-codegen-request-body-name: body
  # /writer/delete/{username}:
  # /writer/search:
  # /writer/follow/{user_pk}/{writer_pk}:
  # /blog/feed:
  # /blog/create:
  # /blog/manage/{pk}:
  # /blog/like/{writer_pk}/{blog_pk}:
  # /blog/save/{writer_pk}/{blog_pk}:
components:
  schemas:
    Writer:
      type: object
      properties:
        pk:
          type: integer
          format: int64
        name:
          type: string
        username:
          type: string
        email:
          type: string
      xml:
        name: Writer
        